# ╔════════════════════════════════════╗
# ║ Sprawdzanie poprawności sudoku:    ║
# ║ Transponowanie tabeli              ║
# ║                                    ║
# ╚════════════════════════════════════╝
from typing import List
class Solution:
    def isValidSudoku(self, board: List[List[str]]) -> bool:
        x, y, z = 0, 0, 0
        window = []
        boardT = list(zip(*board))
        print(boardT)

        def checkList(lista: List[str]):
            for n in lista:
                if lista.count(n) > 1 and n != '.':
                    return False
                else:
                    continue
            return True

        for window in boardT:
            # print(checkList(window))
            if checkList(window):
                continue
            else:
                return False
        for window in board:
            # print(checkList(window))
            if checkList(window):
                continue
            else:
                return False

        for x in range(0,9,3):
            for y in range(0, 9, 3):
                window = []
                for z in range(0,3):
                    window += (board[y+z][x:x+3])
                    # print(checkList(window))
                    if checkList(window):
                        continue
                    else:
                        return False
                print(window)
        return True
Wynik = Solution()

board =\
    [["5","3",".",".","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","9"]]
Wynik1 = Wynik.isValidSudoku(board= board)
print("******\nWynik1", Wynik1, "\n******")

board =\
    [["8","3",".",".","7",".",".",".","."]
    ,["6",".",".","1","9","5",".",".","."]
    ,[".","9","8",".",".",".",".","6","."]
    ,["8",".",".",".","6",".",".",".","3"]
    ,["4",".",".","8",".","3",".",".","1"]
    ,["7",".",".",".","2",".",".",".","6"]
    ,[".","6",".",".",".",".","2","8","."]
    ,[".",".",".","4","1","9",".",".","5"]
    ,[".",".",".",".","8",".",".","7","9"]]
Wynik1 = Wynik.isValidSudoku(board= board)
print("******\nWynik1", Wynik1, "\n******")

board =\
    [["7",".",".",".","4",".",".",".","."]
    ,[".",".",".","8","6","5",".",".","."]
    ,[".","1",".","2",".",".",".",".","."]
    ,[".",".",".",".",".","9",".",".","."]
    ,[".",".",".",".","5",".","5",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".","2",".","."]
    ,[".",".",".",".",".",".",".",".","."]
    ,[".",".",".",".",".",".",".",".","."]]
Wynik1 = Wynik.isValidSudoku(board= board)
print("******\nWynik1", Wynik1, "\n******")

# board =\
#     [["7",".",".",║".","4",".",║".",".","."]
#     ,[".",".",".",║"8","6","5",║".",".","."]
#     ,[".","1",".",║"2",".",".",║".",".","."]
#       ═════════════════════════════════
#     ,[".",".",".",║".",".","9",║".",".","."]
#     ,[".",".",".",║".","5",".",║"5",".","."]
#     ,[".",".",".",║".",".",".",║".",".","."]
#       ═════════════════════════════════
#     ,[".",".",".",║".",".",".",║"2",".","."]
#     ,[".",".",".",║".",".",".",║".",".","."]
#     ,[".",".",".",║".",".",".",║".",".","."]]